@mixin generate($prefix, $property...) {
    // List of sizes to generate for each
    $sizes: (0, 0.25, 0.5, 1, 1.5, 3);
    // Spacing to multiply the sizes by
    $spacing: 1rem;

    // Loop through all of the sizes(we use @for rather than @each, as we want access to the index)
    @for $i from 1 through length($sizes) {
        // Get the size for the current index
        $size: nth($sizes, $i);

        // Create the rule
        .#{$prefix}-#{$i - 1} {
            @for $j from 0 to length($property) {
                @if nth($property, $j + 1) != "" {
                    #{nth($property, $j + 1)}: $spacing * $size;
                }
            }
        }
    }
}
$rules: (
    ("m", "margin", ""),
    ("ml", "margin-left", ""),
    ("mt", "margin-top", ""),
    ("mb", "margin-bottom", ""),
    ("mr", "margin-right", ""),
    ("mx", "margin-right", "margin-left"),
    ("my", "margin-top", "margin-bottom")
);
@each $item in $rules {
    @include generate(nth($item, 1), nth($item, 2), nth($item, 3));
}
